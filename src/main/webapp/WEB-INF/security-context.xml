<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http pattern="/login" security="none"/>

    <http auto-config="true">
        <csrf disabled="true"/>
        <intercept-url pattern="/addBook**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/logoutpage" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <form-login login-processing-url="/j_username_security_check"
                    username-parameter="j_username"
                    password-parameter="j_password"
                    login-page="/login"

                    authentication-failure-url="/login?error=login"/>
        <logout logout-url="/static/j_spring_security_logout"/>
    </http>

    <beans:bean name="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT login, password, enabled from users where login=?"
                               authorities-by-username-query=
                                       "select users.login, roles.name as role from users left join roles on users.role_id=roles.id where login=?"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>