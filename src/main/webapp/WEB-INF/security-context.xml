<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http pattern="/login" security="none"/>

    <http auto-config="true" use-expressions="true">
        <csrf disabled="true"/>
        <intercept-url pattern="/secure**" access="hasRole('admin')"/>
        <form-login login-processing-url="/j_username_security_check"
                    username-parameter="j_username"
                    password-parameter="j_password"
                    login-page="/login"

                    authentication-failure-url="/login?error=login"/>
        <logout logout-url="/static/j_spring_security_logout"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="user" password="1" authorities="admin"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

    <!--<authentication-manager>-->
        <!--<authentication-provider>-->
            <!--<jdbc-user-service data-source-ref="dataSource"-->
               <!--users-by-username-query="SELECT login,password,role_id FROM users WHERE login=?"-->
               <!--authorities-by-username-query="SELECT u.login, r.name AS role FROM users u JOIN roles r ON u.login=?"/>-->
        <!--</authentication-provider>-->
    <!--</authentication-manager>-->

</beans:beans>